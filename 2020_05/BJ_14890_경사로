package baekjoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

/**
 * @Author leejinyoung
 * @Date  Jun 5, 2020
 * @Language java
 * @Memory 	14328KB
 * @RunningSpeed 96ms
 * @Description 경사로 길이가 1일때 주의!
 * 
 */
public class BJ_14890_경사로 {

	private static int[][] map;
	private static int pos;
	private static int N;
	private static int X;

	public static void main(String[] args) throws IOException {
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer tks = new StringTokenizer(bf.readLine());
		// 맵크기, 경사로 길이
		N = Integer.parseInt(tks.nextToken());
		X = Integer.parseInt(tks.nextToken());

		// 맵
		map = new int[N][N];

		for (int i = 0; i < N; i++) {
			tks = new StringTokenizer(bf.readLine(), " ");
			for (int j = 0; j < N; j++) {
				map[i][j] = Integer.parseInt(tks.nextToken());
			}
		}

		// 가능한 경우의 수
		pos = 0;

		for (int i = 0; i < N; i++) {
			int[] line = new int[N];
			if (check(map[i])) {
				pos++;
			}
			for (int j = 0; j < N; j++) {
				line[j] = map[j][i];
			}
			if (check(line)) {
				pos++;
			}

		}
		
		System.out.println(pos);

	}

	private static boolean check(int[] line) {

		int conti = 1;
		int stand = line[0];
		boolean need= false;
		for (int i = 1; i < N; i++) {

			if(stand==line[i]) {
				conti++;
				if(need && conti>=X) {
					need=false;
					conti-=X;
				}
			}

			else if(stand<line[i]) {
				if(need) {
					if(X>conti) return false;
					else conti-=X;
				}

				if(line[i]!=stand+1) return false;

				if(conti>=X) {
					conti=1;
					stand=line[i];
					continue;
				}else {
					return false;
				}	
			}
			else if(stand>line[i]){
				if(need) {
					if(X>conti) return false;
					else conti-=X;
				}

				if(line[i]!=stand-1) return false;

				need=true;
				conti=1;
				stand=line[i];

			}

		}

		if(need && conti<X) return false;
		//System.out.println(Arrays.toString(line));
		return true;
	}
}
